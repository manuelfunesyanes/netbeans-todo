/*
 * Listatasks.java
 *
 * Created on 20 de Dezembro de 2005, 19:49
 */

package todo.view;

import java.util.*;
import java.awt.Color;
import java.awt.FontMetrics;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.*;
import todo.model.Task;

/**
 *
 * @author  lozano
 */
public class TasksWindow extends javax.swing.JFrame {
    
    private ActionSupport actionSupport = new ActionSupport(this);
    
    public void addActionListener(ActionListener listener) {
        actionSupport.addActionListener(listener);
    }
    
    public void removeActionListener(ActionListener listener) {
        actionSupport.removeActionListener(listener);
    }

    public void setStatus(String msg, boolean isError) {
        status.setText(msg);
        if (isError)
            status.setForeground(Color.RED);
        else
            status.setForeground(Color.DARK_GRAY);
    }
    
    private void enableEdit(boolean enabled) {
        editButton.setEnabled(enabled);
        editMenu.setEnabled(enabled);
    }
    
    private void enableMark(boolean enabled) {
        markButton.setEnabled(enabled);
        markMenu.setEnabled(enabled);
    }
    
    private void enableRemove(boolean enabled) {
        removeButton.setEnabled(enabled);
        removeMenu.setEnabled(enabled);
    }
    
    private ListSelectionListener selectionListener = new ListSelectionListener() {
        public void valueChanged(ListSelectionEvent e) {
            enableEdit(tasks.getSelectedRowCount() == 1);
            enableMark(tasks.getSelectedRowCount() >= 1);
            enableRemove(tasks.getSelectedRowCount() >= 1);
        }
    };
    
    private TasksTableModel gettasksTableModel() {
        return (TasksTableModel)tasks.getModel();
    }
    
    public void setTaskList(List<Task> taskList) {
        this.tasks.setModel(new TasksTableModel(taskList));
    }
    
    public Task getSelectedTask() {
        return ((TasksTableModel)tasks.getModel()).getValoresTarefa(tasks.getSelectedRow());
    }
    
    public Task[] getSelectedTasks() {
        Task[] selecao = new Task[tasks.getSelectedRowCount()];
        int[] indices = tasks.getSelectedRows();
        int j = 0;
        for (int i : indices)
            selecao[j++] = ((TasksTableModel)tasks.getModel()).getValoresTarefa(i);
        return selecao;
    }
    
    public TasksWindow() {
        initComponents();
        setLocationRelativeTo(null);
        tasks.setAutoCreateColumnsFromModel(false);
        FontMetrics fm = tasks.getFontMetrics(tasks.getFont());
        tasks.setModel(new TasksTableModel(new ArrayList<Task>()));
        tasks.setColumnModel(new TasksColumnModel(fm));
        tasks.getSelectionModel().addListSelectionListener(selectionListener);
        enableEdit(false);
        enableRemove(false);
        enableMark(false);
        newList.addActionListener(actionSupport);
        openList.addActionListener(actionSupport);
        addMenu.addActionListener(actionSupport);
        editMenu.addActionListener(actionSupport);
        removeMenu.addActionListener(actionSupport);
        markMenu.addActionListener(actionSupport);
        alertsMenu.addActionListener(actionSupport);
        sobre.addActionListener(actionSupport);
        addButton.addActionListener(actionSupport);
        editButton.addActionListener(actionSupport);
        removeButton.addActionListener(actionSupport);
        markButton.addActionListener(actionSupport);
        alertsButton.addActionListener(actionSupport);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        markButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        showButton = new javax.swing.JToggleButton();
        sortButton = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        alertsButton = new javax.swing.JButton();
        status = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tasks = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        newList = new javax.swing.JMenuItem();
        openList = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        exit = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        addMenu = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenuItem();
        removeMenu = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        markMenu = new javax.swing.JMenuItem();
        opcoes = new javax.swing.JMenu();
        showMenu = new javax.swing.JCheckBoxMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        sortByPriorityMenu = new javax.swing.JRadioButtonMenuItem();
        sortByDueDateMenu = new javax.swing.JRadioButtonMenuItem();
        jSeparator4 = new javax.swing.JSeparator();
        alertsMenu = new javax.swing.JMenuItem();
        ajuda = new javax.swing.JMenu();
        sobre = new javax.swing.JMenuItem();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Todo");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jToolBar1.setFloatable(false);

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add_obj.gif"))); // NOI18N
        addButton.setActionCommand("newTask");
        jToolBar1.add(addButton);

        editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/configs.gif"))); // NOI18N
        editButton.setActionCommand("editTask");
        jToolBar1.add(editButton);

        removeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete_obj.gif"))); // NOI18N
        removeButton.setActionCommand("removeTask");
        jToolBar1.add(removeButton);

        markButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/complete_tsk.gif"))); // NOI18N
        markButton.setActionCommand("markTask");
        jToolBar1.add(markButton);

        jLabel2.setText(" ");
        jToolBar1.add(jLabel2);

        showButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/showtsk_tsk.gif"))); // NOI18N
        showButton.addActionListener(formListener);
        jToolBar1.add(showButton);

        sortButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/next_nav.gif"))); // NOI18N
        sortButton.addActionListener(formListener);
        jToolBar1.add(sortButton);

        jLabel3.setText(" ");
        jToolBar1.add(jLabel3);

        alertsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/showwarn_tsk.gif"))); // NOI18N
        alertsButton.setActionCommand("showAlerts");
        jToolBar1.add(alertsButton);

        status.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        status.setText("Todo - Task List - NetBeans Magazine (JavaOne 2006)");

        tasks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Hotel reservations", "Y", "10/04/06"},
                {"1", "Review BOF-2000 slides", "Y", "10/05/06"},
                {"2", "Reserve time for Java.Net community corner", "N", "20/04/05"},
                {"", null, "", null}
            },
            new String [] {
                "Priority", "Task", "Alert", "Due date"
            }
        ));
        tasks.addMouseListener(formListener);
        jScrollPane1.setViewportView(tasks);

        file.setMnemonic('F');
        file.setText("File");

        newList.setMnemonic('N');
        newList.setActionCommand("createTaskList");
        newList.setLabel("New task list...");
        file.add(newList);

        openList.setMnemonic('O');
        openList.setActionCommand("openTaskList");
        openList.setLabel("Open task list...");
        file.add(openList);
        file.add(jSeparator1);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
        exit.setMnemonic('X');
        exit.setLabel("Exit");
        exit.addActionListener(formListener);
        file.add(exit);

        jMenuBar1.add(file);

        edit.setMnemonic('E');
        edit.setText("Edit");

        addMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_INSERT, 0));
        addMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add_obj.gif"))); // NOI18N
        addMenu.setMnemonic('A');
        addMenu.setText("Add task...");
        addMenu.setActionCommand("newTask");
        edit.add(addMenu);

        editMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.ALT_MASK));
        editMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/configs.gif"))); // NOI18N
        editMenu.setMnemonic('E');
        editMenu.setText("Edit task...");
        editMenu.setActionCommand("editTask");
        edit.add(editMenu);

        removeMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        removeMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete_obj.gif"))); // NOI18N
        removeMenu.setMnemonic('R');
        removeMenu.setText("Remove task");
        removeMenu.setActionCommand("removeTask");
        edit.add(removeMenu);
        edit.add(jSeparator2);

        markMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SPACE, java.awt.event.InputEvent.CTRL_MASK));
        markMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/complete_tsk.gif"))); // NOI18N
        markMenu.setMnemonic('M');
        markMenu.setText("Mark as completed");
        markMenu.setActionCommand("markTask");
        edit.add(markMenu);

        jMenuBar1.add(edit);

        opcoes.setMnemonic('O');
        opcoes.setText("Options");

        showMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F10, 0));
        showMenu.setMnemonic('C');
        showMenu.setText("Show completed tasks");
        showMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/showtsk_tsk.gif"))); // NOI18N
        showMenu.addActionListener(formListener);
        opcoes.add(showMenu);
        opcoes.add(jSeparator3);

        sortByPriorityMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F11, 0));
        sortByPriorityMenu.setMnemonic('P');
        sortByPriorityMenu.setText("Sort by Priority");
        sortByPriorityMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/next_nav.gif"))); // NOI18N
        sortByPriorityMenu.addActionListener(formListener);
        opcoes.add(sortByPriorityMenu);

        sortByDueDateMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        sortByDueDateMenu.setMnemonic('D');
        sortByDueDateMenu.setText("Sort by Due date");
        sortByDueDateMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/next_nav.gif"))); // NOI18N
        sortByDueDateMenu.addActionListener(formListener);
        opcoes.add(sortByDueDateMenu);
        opcoes.add(jSeparator4);

        alertsMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        alertsMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/showwarn_tsk.gif"))); // NOI18N
        alertsMenu.setMnemonic('A');
        alertsMenu.setText("Show alerts...");
        alertsMenu.setActionCommand("showAlerts");
        opcoes.add(alertsMenu);

        jMenuBar1.add(opcoes);

        ajuda.setMnemonic('H');
        ajuda.setText("Help");

        sobre.setMnemonic('A');
        sobre.setText("About...");
        sobre.setActionCommand("about");
        ajuda.add(sobre);

        jMenuBar1.add(ajuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(status))
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == showButton) {
                TasksWindow.this.showButtonActionPerformed(evt);
            }
            else if (evt.getSource() == sortButton) {
                TasksWindow.this.sortButtonActionPerformed(evt);
            }
            else if (evt.getSource() == exit) {
                TasksWindow.this.exitActionPerformed(evt);
            }
            else if (evt.getSource() == showMenu) {
                TasksWindow.this.showMenuActionPerformed(evt);
            }
            else if (evt.getSource() == sortByPriorityMenu) {
                TasksWindow.this.sortByPriorityMenuActionPerformed(evt);
            }
            else if (evt.getSource() == sortByDueDateMenu) {
                TasksWindow.this.sortByDueDateMenuActionPerformed(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == tasks) {
                TasksWindow.this.tasksMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
        showCompleted(!gettasksTableModel().isShowCompleted());
    }//GEN-LAST:event_showButtonActionPerformed

    private void showMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMenuActionPerformed
        showCompleted(!gettasksTableModel().isShowCompleted());
    }//GEN-LAST:event_showMenuActionPerformed

    private void sortByDueDateMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByDueDateMenuActionPerformed
        sortByPriority(false);
    }//GEN-LAST:event_sortByDueDateMenuActionPerformed

    private void sortByPriorityMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByPriorityMenuActionPerformed
        sortByPriority(true);
    }//GEN-LAST:event_sortByPriorityMenuActionPerformed

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        sortByPriority(!gettasksTableModel().isSortByPriority());
    }//GEN-LAST:event_sortButtonActionPerformed

    private void tasksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tasksMouseClicked
        if (evt.getClickCount() == 2)
            editButton.doClick();
    }//GEN-LAST:event_tasksMouseClicked
    
    private void sortByPriority(boolean byPriority) {
        sortByDueDateMenu.setSelected(!byPriority);
        sortByPriorityMenu.setSelected(byPriority);
        sortButton.setSelected(!byPriority);
        gettasksTableModel().setSortByPriority(byPriority);
    }
    
    private void showCompleted(boolean show) {
        showButton.setSelected(show);
        showMenu.setSelected(show);
        gettasksTableModel().setShowCompleted(show);
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TasksWindow().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JMenuItem addMenu;
    private javax.swing.JMenu ajuda;
    private javax.swing.JButton alertsButton;
    private javax.swing.JMenuItem alertsMenu;
    private javax.swing.JMenu edit;
    private javax.swing.JButton editButton;
    private javax.swing.JMenuItem editMenu;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu file;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton markButton;
    private javax.swing.JMenuItem markMenu;
    private javax.swing.JMenuItem newList;
    private javax.swing.JMenu opcoes;
    private javax.swing.JMenuItem openList;
    private javax.swing.JButton removeButton;
    private javax.swing.JMenuItem removeMenu;
    private javax.swing.JToggleButton showButton;
    private javax.swing.JCheckBoxMenuItem showMenu;
    private javax.swing.JMenuItem sobre;
    private javax.swing.JToggleButton sortButton;
    private javax.swing.JRadioButtonMenuItem sortByDueDateMenu;
    private javax.swing.JRadioButtonMenuItem sortByPriorityMenu;
    private javax.swing.JLabel status;
    private javax.swing.JTable tasks;
    // End of variables declaration//GEN-END:variables
    
}
